<section id="contact" class="section contact">
  <div class="glowing-orb"></div>
  <div class="container">
    <h2 class="section-title">
      <span class="text-accent">04.</span> Get In Touch
    </h2>
    <div class="contact-content">
      <div class="contact-text js-fade-in">
        <p>
          I'm currently open to new opportunities and collaborations. Whether you have a project in mind, 
          a question about my work, or just want to say hello, I'll do my best to get back to you promptly.
        </p>
      </div>
      
      <form class="contact-form glass-effect js-fade-in">
        <div class="form-group">
          <label for="name" class="form-label">Name</label>
          <input type="text" id="name" name="name" class="form-input" required>
        </div>
        <div class="form-group">
          <label for="email" class="form-label">Email</label>
          <input type="email" id="email" name="email" class="form-input" required>
        </div>
        <div class="form-group">
          <label for="subject" class="form-label">Subject</label>
          <input type="text" id="subject" name="subject" class="form-input" required>
        </div>
        <div class="form-group">
          <label for="message" class="form-label">Message</label>
          <textarea id="message" name="message" rows="5" class="form-input" required></textarea>
        </div>
        <button type="submit" class="button primary">
          <span class="button-text">Send Message</span>
          <span class="button-icon">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <line x1="22" y1="2" x2="11" y2="13"></line>
              <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
            </svg>
          </span>
        </button>
      </form>
      
      <div class="contact-alternatives js-fade-in">
        <p>Or reach me directly through:</p>
        <div class="contact-methods">
          <a href="mailto:hello@johndoe.com" class="contact-method">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
              <polyline points="22,6 12,13 2,6"></polyline>
            </svg>
            <span>hello@johndoe.com</span>
          </a>
          <a href="https://linkedin.com/in/johndoe" target="_blank" rel="noopener noreferrer" class="contact-method">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path>
              <rect x="2" y="9" width="4" height="12"></rect>
              <circle cx="4" cy="4" r="2"></circle>
            </svg>
            <span>LinkedIn</span>
          </a>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import anime from 'animejs';

  // Animation for Contact section
  const observerContact = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        anime.timeline({
          easing: 'easeOutExpo'
        })
        .add({
          targets: '#contact .section-title',
          opacity: [0, 1],
          translateY: [20, 0],
          duration: 800
        })
        .add({
          targets: '.js-fade-in',
          opacity: [0, 1],
          translateY: [20, 0],
          delay: anime.stagger(200),
          duration: 800
        }, '-=400');
        
        // Form input focus animations
        const formInputs = document.querySelectorAll('.form-input');
        formInputs.forEach(input => {
          input.addEventListener('focus', () => {
            anime({
              targets: input,
              borderColor: ['rgba(58, 134, 255, 0.2)', 'rgba(58, 134, 255, 0.8)'],
              boxShadow: ['0 0 0 rgba(58, 134, 255, 0)', '0 0 10px rgba(58, 134, 255, 0.3)'],
              duration: 300,
              easing: 'easeOutQuad'
            });
          });
          
          input.addEventListener('blur', () => {
            anime({
              targets: input,
              borderColor: ['rgba(58, 134, 255, 0.8)', 'rgba(58, 134, 255, 0.2)'],
              boxShadow: ['0 0 10px rgba(58, 134, 255, 0.3)', '0 0 0 rgba(58, 134, 255, 0)'],
              duration: 300,
              easing: 'easeOutQuad'
            });
          });
        });
        
        // Animate the glowing orb
        anime({
          targets: '.glowing-orb',
          scale: [0.8, 1.2],
          opacity: [0.4, 0.8],
          easing: 'easeInOutSine',
          duration: 3000,
          loop: true,
          direction: 'alternate'
        });
        
        observerContact.disconnect();
      }
    });
  }, { threshold: 0.1 });

  document.addEventListener('DOMContentLoaded', () => {
    const contactSection = document.querySelector('#contact');
    if (contactSection) {
      observerContact.observe(contactSection);
    }
  });
</script>

<style>
  .contact {
    margin-top: calc(var(--space-xl) * 2);
    margin-bottom: var(--space-xl);
    position: relative;
    overflow: hidden;
  }
  
  .glowing-orb {
    position: absolute;
    width: 300px;
    height: 300px;
    border-radius: 50%;
    background: radial-gradient(circle, rgba(58, 134, 255, 0.3) 0%, rgba(58, 134, 255, 0) 70%);
    filter: blur(30px);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: -1;
    opacity: 0.6;
  }
  
  .section-title {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: var(--space-lg);
    font-size: var(--fs-xl);
    opacity: 0;
  }
  
  .section-title::before,
  .section-title::after {
    content: '';
    display: block;
    height: 1px;
    width: 100px;
    background: linear-gradient(90deg, transparent, var(--color-accent), transparent);
  }
  
  .section-title::before {
    margin-right: var(--space-md);
  }
  
  .section-title::after {
    margin-left: var(--space-md);
  }
  
  .contact-content {
    max-width: 800px;
    margin: 0 auto;
    position: relative;
    z-index: 1;
  }
  
  .contact-text {
    text-align: center;
    margin-bottom: var(--space-lg);
    opacity: 0;
  }
  
  .contact-text p {
    color: var(--color-text-muted);
    font-size: var(--fs-md);
    line-height: 1.6;
    max-width: 600px;
    margin: 0 auto;
  }
  
  .contact-form {
    padding: var(--space-lg);
    border-radius: 8px;
    margin-bottom: var(--space-lg);
    opacity: 0;
  }
  
  .form-group {
    margin-bottom: var(--space-md);
  }
  
  .form-label {
    display: block;
    margin-bottom: var(--space-xs);
    color: var(--color-text);
    font-size: var(--fs-sm);
  }
  
  .form-input {
    width: 100%;
    padding: var(--space-sm);
    background-color: rgba(10, 14, 23, 0.5);
    border: 1px solid rgba(58, 134, 255, 0.2);
    border-radius: 4px;
    color: var(--color-text);
    font-family: inherit;
    font-size: var(--fs-base);
    transition: all var(--transition-normal);
  }
  
  .form-input:focus {
    outline: none;
    border-color: rgba(58, 134, 255, 0.8);
    box-shadow: 0 0 10px rgba(58, 134, 255, 0.3);
  }
  
  textarea.form-input {
    resize: vertical;
    min-height: 120px;
  }
  
  .button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-xs);
    padding: var(--space-sm) var(--space-lg);
    border-radius: 4px;
    font-size: var(--fs-md);
    font-weight: var(--fw-medium);
    line-height: 1;
    text-decoration: none;
    cursor: pointer;
    transition: all var(--transition-normal);
    letter-spacing: 1px;
    border: none;
  }
  
  .button.primary {
    background: linear-gradient(90deg, var(--color-gradient-start), var(--color-gradient-end));
    color: white;
    box-shadow: 0 4px 15px rgba(58, 134, 255, 0.4);
  }
  
  .button.primary:hover {
    box-shadow: 0 6px 20px rgba(58, 134, 255, 0.6);
    transform: translateY(-3px);
  }
  
  .button-icon {
    transform: translateX(0);
    transition: transform var(--transition-normal);
  }
  
  .button:hover .button-icon {
    transform: translateX(5px);
  }
  
  .contact-alternatives {
    text-align: center;
    opacity: 0;
  }
  
  .contact-alternatives p {
    color: var(--color-text-muted);
    margin-bottom: var(--space-md);
  }
  
  .contact-methods {
    display: flex;
    justify-content: center;
    gap: var(--space-lg);
    flex-wrap: wrap;
  }
  
  .contact-method {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    color: var(--color-text);
    transition: all var(--transition-normal);
    padding: var(--space-xs) var(--space-sm);
    border-radius: 4px;
  }
  
  .contact-method:hover {
    background-color: rgba(58, 134, 255, 0.1);
    transform: translateY(-3px);
    color: var(--color-accent);
  }
  
  .contact-method svg {
    stroke: var(--color-accent);
  }
  
  /* Responsive styles */
  @media (max-width: 768px) {
    .contact-form {
      padding: var(--space-md);
    }
    
    .section-title::before,
    .section-title::after {
      width: 50px;
    }
    
    .contact-methods {
      flex-direction: column;
      gap: var(--space-md);
      align-items: center;
    }
  }
</style> 