---
const experiences = [
  {
    title: "Senior Frontend Developer",
    company: "Acme Corporation",
    period: "January 2021 - Present",
    description: [
      "Led the development of a React-based component library used across multiple products",
      "Optimized application performance resulting in 40% faster page load times",
      "Mentored junior developers and conducted code reviews to maintain high code quality",
      "Collaborated with designers to implement complex UI animations and interactions"
    ],
    technologies: ["React", "TypeScript", "Redux", "GraphQL", "Jest", "Webpack"]
  },
  {
    title: "Frontend Developer",
    company: "Tech Startup Inc.",
    period: "March 2018 - December 2020",
    description: [
      "Developed client-facing web applications using Vue.js and Nuxt",
      "Implemented state management solutions and API integrations",
      "Built RESTful APIs with Node.js and Express",
      "Participated in agile development process and sprint planning"
    ],
    technologies: ["Vue.js", "Nuxt.js", "JavaScript", "Node.js", "Express", "MongoDB"]
  },
  {
    title: "Web Developer",
    company: "Digital Agency",
    period: "June 2015 - February 2018",
    description: [
      "Created responsive websites for various clients across industries",
      "Converted design mockups into functional web pages",
      "Maintained and updated existing websites and fixed browser compatibility issues",
      "Collaborated with the design team to ensure optimal user experience"
    ],
    technologies: ["HTML5", "CSS3", "JavaScript", "jQuery", "PHP", "WordPress"]
  }
];
---

<section id="experience" class="section experience">
  <div class="container">
    <h2 class="section-title">
      <span class="text-accent">03.</span> Work Experience
    </h2>
    
    <div class="terminal-container js-fade-in">
      <div class="terminal-header">
        <div class="terminal-buttons">
          <span class="terminal-button"></span>
          <span class="terminal-button"></span>
          <span class="terminal-button"></span>
        </div>
        <div class="terminal-title">experience.log</div>
      </div>
      
      <div class="terminal-body">
        <div class="terminal-line">
          <span class="terminal-prompt">user@portfolio:~$</span> <span class="terminal-command">cat experience.log</span>
        </div>
        
        {experiences.map((job, index) => (
          <div class={`job-entry delay-${index + 1}`}>
            <div class="job-header">
              <span class="terminal-prompt">â†’</span> 
              <span class="job-title">{job.title}</span> 
              <span class="text-accent">@</span> 
              <span class="job-company">{job.company}</span>
            </div>
            <div class="job-period"><span class="terminal-comment"># {job.period}</span></div>
            <div class="job-description">
              <ul class="job-list">
                {job.description.map((item) => (
                  <li class="job-item"><span class="terminal-prompt">$</span> {item}</li>
                ))}
              </ul>
            </div>
            <div class="job-tech">
              <span class="terminal-keyword">TECH:</span> 
              {job.technologies.map((tech, i) => (
                <span class="tech-badge">{tech}{i < job.technologies.length - 1 ? ',' : ''}</span>
              ))}
            </div>
          </div>
        ))}
        
        <div class="terminal-line terminal-end delay-4">
          <span class="terminal-prompt">user@portfolio:~$</span> <span class="terminal-blinking-cursor"></span>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import anime from 'animejs';

  // Animation for Experience section
  const observerExperience = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        // Animate the section title
        anime({
          targets: '#experience .section-title',
          opacity: [0, 1],
          translateY: [20, 0],
          duration: 800,
          easing: 'easeOutExpo'
        });
        
        // Animate the terminal container
        anime({
          targets: '.terminal-container',
          opacity: [0, 1],
          translateY: [30, 0],
          duration: 800,
          delay: 300,
          easing: 'easeOutExpo'
        });
        
        observerExperience.disconnect();
      }
    });
  }, { threshold: 0.1 });

  document.addEventListener('DOMContentLoaded', () => {
    const experienceSection = document.querySelector('#experience');
    if (experienceSection) {
      observerExperience.observe(experienceSection);
    }
  });
</script>

<style>
  .experience {
    margin-top: calc(var(--space-xl) * 1.5);
  }
  
  .section-title {
    display: flex;
    align-items: center;
    margin-bottom: var(--space-md);
    font-size: var(--fs-lg);
  }
  
  .section-title::after {
    content: '';
    display: block;
    height: 1px;
    width: 250px;
    background: linear-gradient(90deg, var(--color-accent), transparent);
    margin-left: var(--space-sm);
  }
  
  /* Terminal Styling */
  .terminal-container {
    background-color: #121a29;
    border-radius: 6px;
    overflow: hidden;
    font-family: 'JetBrains Mono', 'Roboto Mono', 'Courier New', monospace;
    border: 1px solid rgba(58, 134, 255, 0.2);
    margin: 0 auto;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.4);
    opacity: 0;
  }
  
  .terminal-header {
    background-color: #0d141e;
    padding: var(--space-xs) var(--space-sm);
    display: flex;
    align-items: center;
    border-bottom: 1px solid rgba(58, 134, 255, 0.1);
  }
  
  .terminal-buttons {
    display: flex;
    gap: 6px;
    margin-right: var(--space-sm);
  }
  
  .terminal-button {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: #ff5f56;
  }
  
  .terminal-button:nth-child(2) {
    background-color: #ffbd2e;
  }
  
  .terminal-button:nth-child(3) {
    background-color: #27c93f;
  }
  
  .terminal-title {
    font-size: var(--fs-xs);
    color: var(--color-text-muted);
  }
  
  .terminal-body {
    padding: var(--space-md);
    color: var(--color-text);
    font-size: var(--fs-xs);
    line-height: 1.6;
  }
  
  .terminal-line {
    margin-bottom: var(--space-sm);
    white-space: nowrap;
    display: flex;
    align-items: center;
  }
  
  .terminal-end {
    margin-top: var(--space-md);
  }
  
  .terminal-prompt {
    color: var(--color-accent);
    margin-right: var(--space-xs);
  }
  
  .terminal-command {
    color: var(--color-text);
  }
  
  .terminal-comment {
    color: #8D99AE;
    font-style: italic;
  }
  
  .terminal-keyword {
    color: #FF79C6;
    margin-right: var(--space-xs);
  }
  
  .terminal-blinking-cursor {
    display: inline-block;
    width: 10px;
    height: 16px;
    background-color: var(--color-accent);
    animation: cursor-blink 1s infinite;
  }
  
  @keyframes cursor-blink {
    0%, 100% { opacity: 1; }
    50% { opacity: 0; }
  }
  
  /* Job Entry Styling */
  .job-entry {
    margin-bottom: var(--space-md);
    padding: var(--space-sm);
    border-radius: 4px;
    background-color: rgba(10, 14, 23, 0.5);
    border-left: 2px solid var(--color-accent);
    opacity: 0;
    animation: fade-in 0.5s ease forwards;
  }
  
  .delay-1 {
    animation-delay: 0.5s;
  }
  
  .delay-2 {
    animation-delay: 1s;
  }
  
  .delay-3 {
    animation-delay: 1.5s;
  }
  
  .delay-4 {
    opacity: 0;
    animation: fade-in 0.5s ease forwards;
    animation-delay: 2s;
  }
  
  @keyframes fade-in {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .job-header {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: var(--space-xxs);
    margin-bottom: var(--space-xs);
  }
  
  .job-title {
    font-weight: var(--fw-medium);
    color: #FFF;
  }
  
  .job-company {
    color: #50FA7B;
  }
  
  .job-period {
    margin-bottom: var(--space-xs);
    font-size: var(--fs-xs);
  }
  
  .job-description {
    margin-bottom: var(--space-xs);
  }
  
  .job-list {
    list-style: none;
    padding-left: var(--space-sm);
  }
  
  .job-item {
    margin-bottom: var(--space-xs);
    font-size: var(--fs-xs);
    color: var(--color-text-muted);
    display: flex;
    align-items: flex-start;
    gap: var(--space-xs);
  }
  
  .job-item .terminal-prompt {
    margin-top: 2px;
  }
  
  .job-tech {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-xxs);
    font-size: var(--fs-xs);
    align-items: center;
  }
  
  .tech-badge {
    color: #FFB86C;
  }
  
  @media (max-width: 768px) {
    .experience {
      margin-top: var(--space-xl);
    }
    
    .section-title::after {
      width: 100px;
    }
    
    .job-header {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-xxs);
    }
  }
</style> 